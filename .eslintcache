[{"/Users/suyapeng/Desktop/Redux/my-app/src/index.js":"1","/Users/suyapeng/Desktop/Redux/my-app/src/serviceWorker.js":"2","/Users/suyapeng/Desktop/Redux/my-app/src/app/store.js":"3","/Users/suyapeng/Desktop/Redux/my-app/src/App.js":"4","/Users/suyapeng/Desktop/Redux/my-app/src/features/counter/counterSlice.js":"5","/Users/suyapeng/Desktop/Redux/my-app/src/features/counter/Counter.js":"6"},{"size":647,"mtime":1612244673652,"results":"7","hashOfConfig":"8"},{"size":5141,"mtime":1612163838003,"results":"9","hashOfConfig":"8"},{"size":201,"mtime":1612244673649,"results":"10","hashOfConfig":"8"},{"size":1709,"mtime":1612317430776,"results":"11","hashOfConfig":"8"},{"size":733,"mtime":1612244673650,"results":"12","hashOfConfig":"8"},{"size":1208,"mtime":1612317495778,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1taksr0",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},"/Users/suyapeng/Desktop/Redux/my-app/src/index.js",["29"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n",["30","31"],"/Users/suyapeng/Desktop/Redux/my-app/src/serviceWorker.js",[],"/Users/suyapeng/Desktop/Redux/my-app/src/app/store.js",[],"/Users/suyapeng/Desktop/Redux/my-app/src/App.js",[],"/Users/suyapeng/Desktop/Redux/my-app/src/features/counter/counterSlice.js",[],"/Users/suyapeng/Desktop/Redux/my-app/src/features/counter/Counter.js",["32","33"],"import React, { useState } from 'react'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { decrement, incrementByAmount, increment, incrementAsync, selectCount} from \"./counterSlice\"\nimport styles from './Counter.module.css'\n\n\nexport function Counter() {\n    const count = useSelector(selectCount())\n    const dispatch = useDispatch()\n    const [incrementAmount, setIncrementAmount] = useState('2')\n\n    return (\n        <div className={styles.row}>\n            <input\n                className={styles.textbox}\n                aria-label=\"Set increment amount\"\n                value={incrementAmount}\n                onChange={e => setIncrementAmount(e.target.value)}\n            />\n            <button\n                className={styles.button}\n                aria-label=\"Increment value\"\n                onClick={() => dispatch(increment())}\n            >\n                +\n            </button>\n            <span className={styles.value}>{count}</span>\n            <button\n                className={styles.button}\n                aria-label=\"Decrement value\"\n                onClick={() => dispatch(decrement())}\n            >\n                -\n            </button>\n        </div>\n    )\n}\n",{"ruleId":"34","severity":1,"message":"35","line":7,"column":13,"nodeType":"36","messageId":"37","endLine":7,"endColumn":26},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"34","severity":1,"message":"42","line":3,"column":21,"nodeType":"36","messageId":"37","endLine":3,"endColumn":38},{"ruleId":"34","severity":1,"message":"43","line":3,"column":51,"nodeType":"36","messageId":"37","endLine":3,"endColumn":65},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"'incrementByAmount' is defined but never used.","'incrementAsync' is defined but never used.","no-global-assign","no-unsafe-negation"]